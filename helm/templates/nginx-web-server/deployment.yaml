apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "urly.fullname" . }}-web-server
  labels:
    {{- include "urly.web-server.labels" . | nindent 4 }}   
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "urly.web-server.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "urly.web-server.labels" . | nindent 8 }}          
    spec:
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
            items:
              - key: nginx.conf
                path: nginx.conf
            defaultMode: 420
        - name: index-html-volume
          configMap:
            name: index.html
            items:
              - key: index.html
                path: index.html
            defaultMode: 420            
      containers:
        - name: urly-web-server
          image:  {{ .Values.urlyWebServer.image.repository }}:{{
          .Values.urlyWebServer.image.tag }}
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "0.5"
            limits:
              memory: "512Mi"
              cpu: "0.5"
          volumeMounts:
            - name: index-html-volume
              mountPath: /usr/share/nginx/html/index.html
              subPath: index.html          
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          imagePullPolicy: Always
      restartPolicy: Always
      securityContext: {}
      imagePullSecrets:
        - name: ghcr
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - urly-web-server
              topologyKey: kubernetes.io/hostname
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%

